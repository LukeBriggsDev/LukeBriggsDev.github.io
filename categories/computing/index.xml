<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Computing - Category - Luke Briggs</title>
        <link>https://www.lukebriggs.dev/categories/computing/</link>
        <description>Computing - Category - Luke Briggs</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>contact@lukebriggs.dev (Luke Briggs)</managingEditor>
            <webMaster>contact@lukebriggs.dev (Luke Briggs)</webMaster><lastBuildDate>Mon, 03 May 2021 20:06:07 &#43;0100</lastBuildDate><atom:link href="https://www.lukebriggs.dev/categories/computing/" rel="self" type="application/rss+xml" /><item>
    <title>Where Hugo I Go</title>
    <link>https://www.lukebriggs.dev/where-hugo-i-go/</link>
    <pubDate>Mon, 03 May 2021 20:06:07 &#43;0100</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/where-hugo-i-go/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/where-hugo-i-go/banner.png" referrerpolicy="no-referrer">
            </div><p>As you are probably aware, I have redecorated. I said in a <a href="/inspection-and-dissection-this-site" rel="">previous post</a> that my reason for making my own site in the first place was as a central hub to point people to all the things that I do. Despite the fact that from the outside it looks like I haven&rsquo;t done a whole lot since, behind the scenes I have my biggest project yet in development (check out my <a href="https://github.com/lukebriggsdev" target="_blank" rel="noopener noreffer">GitHub</a> if you want a sneak preview of that). It was while working on my project that I realised that I shouldn&rsquo;t have a site that requires my to ssh into a VPS and pull a git repository every time I want to add a post.</p>
<h2 id="technology">Technology</h2>
<p>Behind the scenes, the site is hosted on GitHub Pages. The site is generated using a static site generator called <a href="https://gohugo.io/" target="_blank" rel="noopener noreffer">Hugo</a> with a <em>slightly</em> tweaked version of the <a href="https://themes.gohugo.io/loveit/" target="_blank" rel="noopener noreffer">LoveIt</a>.</p>
<p>With a static site I can remove server costs completely, have a better looking site, and make it easier to add new posts.</p>
<p>Because each post is now a document rather than a database field, you can also stick <code>index.md</code> at the end of any post to get the raw markdown for that post. You are also able to view the source for the site at <a href="https://github.com/lukebriggsdev/lukebriggsdev.github.io" target="_blank" rel="noopener noreffer">my GitHub</a></p>
<h2 id="new-logo">New Logo</h2>
<p></p>
<p>Along with the revamped site, I have created a new logo to go with it; it is probably the best looking thing I have ever drawn. The logo takes inspiration from the IBM PCJr with a few more rounded corners, thinner bezels, and a more minimalist feel.</p>
<p>It was made in <a href="https://inkscape.org" target="_blank" rel="noopener noreffer">Inkscape</a> with the basic shapes and the font is Roboto Mono.</p>
]]></description>
</item><item>
    <title>You Can Now Follow Me on RSS!</title>
    <link>https://www.lukebriggs.dev/you-can-now-follow-me-on-rss/</link>
    <pubDate>Thu, 18 Feb 2021 20:52:00 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/you-can-now-follow-me-on-rss/</guid>
    <description><![CDATA[<p>I had a bit of time today and I wanted to do something so here we are.
Thanks to the incredible <a href="https://feedgen.kiesow.be/" target="_blank" rel="noopener noreffer">FeedGen</a> python library, you can now point your RSS reader to <a href="/index.xml" rel="">here</a> and get updates on when I write a new post.</p>
]]></description>
</item><item>
    <title>Goodbye Windows, I Hardly GNU ya</title>
    <link>https://www.lukebriggs.dev/goodbye-windows-i-hardly-gnu-ya/</link>
    <pubDate>Sun, 07 Feb 2021 21:12:30 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/goodbye-windows-i-hardly-gnu-ya/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/13/desktop.png" referrerpolicy="no-referrer">
            </div><p><strong>Preface: I should state that this is not an evangelical sermon, Linux isn&rsquo;t for everyone but it is for me. This is merely a detailing of why I have chosen to switch Operating System</strong></p>
<p>I have, over the course of the past year, consumed pretty much every interpretation and adaptation of Sherlock Holmes out there, from the original works to tangentially linked shows such as the excellent House MD; one thing I have come to understand is that you can only deduce correctly if your initial assumptions are correct. Logic is useless if its underlying axioms are unstable.</p>
<p>So we turn to my current assumption when I use computers &ldquo;Everything must be done in Windows&rdquo;. I have used Windows all my life, all the software I need is on Windows, and all other operating systems are either anaemic in their UX and feature set or are incapable of running on my hardware. It just stands to reason, or does it?</p>
<p>Lets look at that first point, &lsquo;I have used Windows all my life&rsquo;. That is not a very good reason, and the weakest of all. It is indeed true but it shouldn&rsquo;t have any bearing on choice of Operating System, it is an unquestioned ideology rather than any valid argument.</p>
<p>The second axiom, &lsquo;all the software I need is on windows&rsquo;, was probably true for quite a long time. For instance, if I wanted to play any windows games I would have been bang out of luck in days gone by, but tools such as <a href="https://lutris.net/" target="_blank" rel="noopener noreffer">Lutris</a> and the strides made in <a href="https://www.winehq.org/" target="_blank" rel="noopener noreffer">WINE</a> have made that side of things perfectly capable for my needs. Needless to say Mac is straying further away at this point with their move to ARM so the assumption still holds true for them. Outside of gaming, all the apps I <em>need</em> are actually available on Linux. My academic work in Computer Science lends itself perfectly to Linux. All the IDEs I use (the JetBrains suite) are available and the terminal is actually more conducive to my studies compared to the limited Unix-like aliases in the Windows Powershell. The only notable exception on Linux is the lack of the Microsoft Office Suite, but I was quite staggered when I realised that I don&rsquo;t actually have any need for it. My long form writing is now done in LaTeX (<a href="https://www.lukebriggs.dev/17" target="_blank" rel="noopener noreffer">see my reasons for that here</a>), and I don&rsquo;t use Excel or PowerPoint. Should the need ever arise, there is the native <a href="https://www.libreoffice.org/" target="_blank" rel="noopener noreffer">LibreOffice</a> suite, and the cross platform <a href="https://docs.google.com" target="_blank" rel="noopener noreffer">Google Docs</a>. And if compatibility is a necessity then Microsoft also now offers a web app version of the suite.</p>
<p>The second point links to the third, that other operating systems have terrible UX. The king of UX is obviously MacOS, but that obviously doesn&rsquo;t support my hardware or the ability to run the occasional windows game. I had always perceived Linux as having terrible UX because I always just viewed through the lens of someone who has used Windows their whole life. I always just assumed (once again question your assumptions) that how a Linux distro shipped was how it was. I thought I would have to be stuck with the bland, Ubuntu default GNOME desktop and icons with their washed out colours and pre-iOS 6 style realism. I was completely wrong about this and now we are going to look at where Linux, my new Operating System, is actually better for my needs.</p>
<h1 id="the-linux-way-of-thinking">The Linux way of thinking</h1>
<p>Linux is about what Computers were built to do, and it is about the things that us Computer people love. GNU/Linux is a whole software ecosystem that is far greater than what Windows could ever hope for and only rivaled by what Apple has cultivated on its platforms. Unlike Apple, however, GNU/Linux also offers the user complete freedom in every aspect, and there are levels to this. Yes there are demigods that are compiling their own kernels but because there is such a community driven approach, other people have performed every possible layer of abstraction. Over the decades other people have been putting rungs at all levels of the ladder for other people to step on. Because Linux is built for the community by the community, it doesn&rsquo;t fight me.</p>
<p>If I wanted to change the interface on windows, I would need to install several third party apps, each using their own design language and frameworks all while eating up huge amounts of RAM as they do so. In Linux its as easy as choosing an overall desktop environment you like and customisation is welcomed with open arms as a basic human right. Surprisingly, Linux also has an incredibly consistent design language because of how its built. In Windows you have all sorts of frameworks from many decades that all conflict. You&rsquo;ll go from a UWP app with its tile based design ideas, and then open a WPF app that has a reasonable flat aesthetic and some okay ideas, before finally finding one of your applications uses WinForms with all of its tabs and ugly green loading bars. Almost everything on Linux using either the Gtk or Qt GUI libraries, and because of this everything looks consistent. Most Desktop Environments also let you either make or download your own themes for these graphics libraries. As a result you can make all the colours, buttons and menus in the ENTIRE Linux ecosystem look how you want.</p>
<p>The Linux way is for people who care about these things. If you care about things like the same apps using the same frameworks, or the fact that you can use package managers to allow apps to auto-update and avoid redundant dependencies, or how you have a whole community of people who&rsquo;s only incentive is to make good software.</p>
<h1 id="technical-details">Technical Details</h1>
<p><strong>Distribution</strong>: <a href="https://manjaro.org/" target="_blank" rel="noopener noreffer">Manjaro</a></p>
<p><strong>Desktop Environment</strong>: <a href="https://kde.org/plasma-desktop/" target="_blank" rel="noopener noreffer">KDE Plasma</a></p>
<p><strong>Theme</strong>: Breeze Dark</p>
<p><strong>Icon Set</strong>: <a href="https://github.com/yeyushengfan258/Reversal-icon-theme" target="_blank" rel="noopener noreffer">Reversal</a></p>
<p><strong>Background</strong>: (<a href="https://i.imgur.com/DUXXqM2.jpg" target="_blank" rel="noopener noreffer">Imgur</a>) (<a href="/static/postimages/13/themagichour.png" rel="">Mirror</a>)</p>
<h2 id="why-manjaro">Why Manjaro?</h2>
<p>I chose Manjaro, at first by design and then retroactively I realised that I would have had to go with something like it anyway. I wanted a distribution that didn&rsquo;t come with the usual GNOME look, something that either looked excellent at first glance or had extensive customisation capabilities, and something that was pretty light on what it came with. I ended up narrowing it down to <a href="https://manjaro.org/" target="_blank" rel="noopener noreffer">Manjaro</a> and <a href="https://elementary.io/" target="_blank" rel="noopener noreffer">Elementary OS</a>. In the end I chose Manjaro between the two because Elementary seemed slightly far behind in its update cycle compared to the Ubuntu it is based off and its never fun to start off with something knowing there is a major version incredibly close. It turned out in the end that Manjaro was really my best choice between the two anyway thanks to its easy switching between Kernels. I currently need to be running the latest experimental kernel for my touch pad to work.</p>
]]></description>
</item><item>
    <title>The Layperson’s Guide to LaTeX</title>
    <link>https://www.lukebriggs.dev/the-laypersons-guide-to-latex/</link>
    <pubDate>Wed, 06 Jan 2021 22:06:22 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/the-laypersons-guide-to-latex/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/11/rainbow.jpg" referrerpolicy="no-referrer">
            </div><p>As part of my degree I will have to write many words into many documents and submit them all as part of assignments.</p>
<p>There was a time when we were young, stupid and thought that the peak of document formatting was WordArt, a drop shadow, and rainbow II. We would stick borders on our .pub files and feel superior if our PowerPoints had a dissolve transition. As we age past primary school we begin to conform to the world’s sensibilities that Comic Sans is not an adequate typeface and having every colour on the spectrum is a way to actually guarantee some of your text will be unreadable.</p>
<p>Since we are forced to conform, we might as well do it to perfection, and you can only go so far in a tool that still thinks that word processors need a background ‘water droplet’ texture fill.</p>
<h1 id="what-is-this-latex-and-why-is-it-not-pronounced-like-that">What is this LaTeX and Why is it Not Pronounced Like That?</h1>
<p>If you want a tool that focuses on the nicest looking documents without caving into the design requirements of 7 year olds, you have to go back to a time before texture fills. Actually you have to go back to a time before computers could even show pictures. Nice looking documents (i.e had legible fonts) had to be obtained using specialised typesetters that cost as much as a house, either that or you’d use a literal printing press – this was the time in which TeX was created. LaTeX is built on TeX and is its more approachable step-son. LaTeX uses a mark-up language to design its document with the idea being that you focus on the content while the engine works out the best formatting.</p>
<h1 id="isnt-this-a-bit-of-a-faff">Isn’t This a Bit of a Faff?</h1>
<p>It depends on your personality. If you are happy with documents that are only adequate, then continue in your mediocrity. But for those of us who seek perfection and see neuroplasticity as a fundamental attribute, LaTeX offers a sterling reward for your efforts.</p>
<h1 id="how-good-does-it-look">How Good Does it Look?</h1>
<p>In the days when people weren’t made of pixels I spent the time making my own word template. It had wonderful serif headings; all the styles used Word’s tools so it did as much of the heavy lifting as possible; and all the font sizes were made just right.</p>
<p>The results from Word are as follows:
</p>
<p>It looks <em>okay</em>. It looks far better than what some people create in Word. Even creating something okay looking feels like a hack though. Having nice paragraph spacing underneath headings required my to individually change all the line spacing options by hand. Anyone who has ever tried to implement code into a word document also knows that it will require you to sacrifice your firstborn.</p>
<p>Now, for a LaTeX document:
</p>
<p>No time spent messing with templates, no changing font sizes, and it probably took me less time to make a document that looks even better. The best thing about LaTeX is that because everything is done programmatically, it can have an integration that is mind boggling. For instance, if you want to insert a segment of a python script in your document you dont actually need to copy and paste bits into your .tex file. You can just tell it where the script is, give it the line numbers and it will display and format it all for you.</p>
<h1 id="where-do-i-begin">Where Do I Begin?</h1>
<p>This is for those of a Windows disposition</p>
<p>First install a distribution of LaTeX called <a href="https://miktex.org/download" target="_blank" rel="noopener noreffer">MiKTeX</a>. MiKTeX has everything you need and will make the whole experience as easy as possible.</p>
<p>Our code editor is called TeXworks, so open that up and lets write some LaTeX.</p>
<p>LaTeX follows a syntax of \command[option]{parameter} and we start a document off by selecting the type of document we want to create, and then starting and ending said document. There are a number of <a href="https://en.wikibooks.org/wiki/LaTeX/Document_Structure#Document_classes" target="_blank" rel="noopener noreffer">document classes</a> but article is the one recommended for most documents.</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-latex" data-lang="latex"><span class="c">% Start of Document (Comments are denoted by a percentage at the start of the line)
</span><span class="c"></span><span class="k">\documentclass</span><span class="nb">{</span>article<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
I&#39;m so pretty
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</code></pre></td></tr></table>
</div>
</div><p>And we get:
</p>
<p>Currently it looks like a note left by a serial killer with access to a typewriter so lets stick our name on it.</p>
<p>The title, date, and author of your document all have dedicated tags in LaTeX. They are \title \date and \author. We then tell LaTeX to show all these on the screen by using \maketitle</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-latex" data-lang="latex"><span class="c">% Start of Document (Comments are denoted by a percentage at the start of the line)
</span><span class="c"></span><span class="k">\documentclass</span><span class="nb">{</span>article<span class="nb">}</span>
 
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
 
<span class="k">\title</span><span class="nb">{</span>My Pretty Document<span class="nb">}</span>
<span class="k">\author</span><span class="nb">{</span>J. Smith<span class="nb">}</span>
<span class="k">\date</span><span class="nb">{</span>23 November 1963<span class="nb">}</span>
<span class="k">\maketitle</span>
 
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Output:
</p>
<p>You can hear groups of your preferred gender(s) running to throw themselves at you as we speak.</p>
<p>Now for some content. Once again there are various different types of <a href="https://en.wikibooks.org/wiki/LaTeX/Document_Structure#Sectioning_commands" target="_blank" rel="noopener noreffer">sectioning</a> you can use but we will use the pretty straight forward \section</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-latex" data-lang="latex"><span class="c">% Start of Document (Comments are denoted by a percentage at the start of the line)
</span><span class="c"></span><span class="k">\documentclass</span><span class="nb">{</span>article<span class="nb">}</span>
<span class="k">\begin</span><span class="nb">{</span>document<span class="nb">}</span>
 
<span class="k">\title</span><span class="nb">{</span>My Pretty Document<span class="nb">}</span>
<span class="k">\author</span><span class="nb">{</span>J. Smith<span class="nb">}</span>
<span class="k">\date</span><span class="nb">{</span>23 November 1963<span class="nb">}</span>
 
<span class="k">\maketitle</span>
 
<span class="k">\section</span><span class="nb">{</span>This is a subtitle<span class="nb">}</span>
I can just write text under the section tag and it will all be made nice
 
<span class="k">\section</span><span class="nb">{</span>This is my second subtitle<span class="nb">}</span>
I just add another section tag and it will become the second section in the document. Pretty cool!
 
<span class="k">\end</span><span class="nb">{</span>document<span class="nb">}</span>
</code></pre></td></tr></table>
</div>
</div><p>Output:</p>
<p></p>
<p>Positive gasps emanate from the crowd at the sight of such serifs. You will notice that LaTex automatically added heading numbers and changed the weight, face, and size of the type to better suit a heading. <a href="https://en.wikibooks.org/wiki/LaTeX" target="_blank" rel="noopener noreffer">There are all sorts of things you can do</a> that I haven’t covered like how it can do bibliographies for you and organise images and figures correctly. There are also things that are beyond my knowledge like drawing your own 3d graphics within source. All of it can be taken one step at a time. If you don’t know something, look it up, learn how to do it, and implement it – it’s all pretty approachable.</p>
<p>LaTeX isn’t perfect in its implementation, only its possible output. For instance, the answer to the question ‘how do I insert an svg’ is ‘use a pdf instead’ but I hope I have given you a taste of a better alternative to Word, even if it does introduce the possibility that your reports can have syntax errors.</p>
<h1 id="further-notes">Further Notes</h1>
<p>If you are writing your reports in LaTeX like me then you will need the correct bibliography formatting. LaTeX offers a few styles by default but I have learned there is no such thing as a standard and my University (Newcastle) uses <a href="https://libguides.ncl.ac.uk/managing/harvard" target="_blank" rel="noopener noreffer">its own guidelines</a>. The process for creating your own style involves both a command line tool and further tweaking using a bespoke programming language using REVERSE POLISH NOTATION, which is what happens if Christopher Nolan got his hands on a compiler. To save my fellow students time, I created a style for Newcastle’s bibliography style and <a href="https://github.com/LukeBriggsDev/Newcastle-BibTeX" target="_blank" rel="noopener noreffer">it is hosted on GitHub</a>.</p>
]]></description>
</item></channel>
</rss>
