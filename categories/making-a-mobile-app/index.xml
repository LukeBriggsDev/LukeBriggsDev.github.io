<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Making a Mobile App - Category - Luke Briggs</title>
        <link>https://www.lukebriggs.dev/categories/making-a-mobile-app/</link>
        <description>Making a Mobile App - Category - Luke Briggs</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>contact@lukebriggs.dev (Luke Briggs)</managingEditor>
            <webMaster>contact@lukebriggs.dev (Luke Briggs)</webMaster><lastBuildDate>Sat, 09 Mar 2019 20:47:46 &#43;0000</lastBuildDate><atom:link href="https://www.lukebriggs.dev/categories/making-a-mobile-app/" rel="self" type="application/rss+xml" /><item>
    <title>Making a Mobile App – Chapter 5: Go Your Own Way</title>
    <link>https://www.lukebriggs.dev/making-a-mobile-app-chapter-5/</link>
    <pubDate>Sat, 09 Mar 2019 20:47:46 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/making-a-mobile-app-chapter-5/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/9/xkcd378.png" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“Real programmers set the universal constants at the start such that the &gt;universe evolves to contain the disk with the data they want .”</p>
<p>xkcd 378</p>
</blockquote>
<p>I wanted to add a gallery for users to be able to scroll through a variety of images so I did a quick google search about how I was going to go about it and I found <a href="https://www.npmjs.com/package/react-native-image-view" target="_blank" rel="noopener noreffer">react-native-image-view</a>. In 6 lines of code and an array of Imgur links you can have a decent and working image gallery, job sorted! Right?</p>
<p></p>
<p>In truth, it unsettled me. Was this cheating? Should I have created my own gallery? This package was better than anything I could come up with and something I wasn’t prepared to spend time on but I still felt like a part of the app was no longer mine.</p>
<p>These sorts of ideas are things I have seen keep cropping up across everything I have done. I see other people’s enemy movement packages in Unity and magic code on StackOverflow that does everything you need, but are these a step to far? Are you losing what it means to actuallly create something? I’ve had all these questions and I think I will always question myself about the balance between hard coding everything from scratch and using magic boxes that do the gruntwork for you, but for now I have decided it’s about scope. It is not within the scope of this project to make an image gallery, it is just a small feature in an app that is for doing something else. The amount of time it would take to create something like this is time that could be spent doing something else that is specific to this app and does require the time spent on it.</p>
<p>The way I intend to go about my projects is to learn what I need out of it and the crucial elements of it. If I’m making a game in Unity I would feel uncomfortable using someone else’s movement package, movement is such a core aspect of a game’s feel that I think I should have control over its nuance. Equally, I am ok with using an image viewer package as it means I can spend more time on bigger features and I will write my own image viewer if this one is no longer fit for purpose. This is a pet project and so it is really only my own motivation that is going to get it finished. The more time I spend on a time consuming feature, the less likely it is that the project will get finished. What I want out of this app is to come out the other side of it with something that is complete and to achieve this I need to pick and choose my battles.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 4: Fast and Flash</title>
    <link>https://www.lukebriggs.dev/making-a-mobile-app-chapter-4/</link>
    <pubDate>Mon, 10 Dec 2018 21:57:21 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/making-a-mobile-app-chapter-4/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/8/desk.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“A common mistake that people make when trying to design something
completely foolproof is to underestimate the ingenuity of complete fools.”</p>
<p>Douglas Adams</p>
</blockquote>
<p>As this app will be for a business, it has to serve some purposes. First it has to present the company as a professional entity and also fit with its branding to provide not only a consistent experience but to also strengthen that companies place in your head, making them more likely to go to them rather than anyone else. Next it has to serve a point, it’s all well and good having some fancy spiel about company ethos and dedication to the craft but you want the user to have a reason to not only to install your app but to also keep using it. Finally, it has to be straightforward to use and foolproof. Well, nothing is foolproof proof. Well, nothing is foolproof.</p>
<h4 id="branding">Branding</h4>
<p>The company colours were red, dark grey and white. It therefore makes sense for the app to only use the colours red dark grey and white, seems simple enough.</p>
<p></p>
<p>Eww, a red pastel background with black text and mismatch white buttons and icons. It looks like a tomato soup can just exploded in the microwave. It’s all about complimentary colours and keeping things clean. The main colour of any app or website shouldn’t be something outrageous or garish, you want to present professionalism and minimalism. It’s good to have an accent colour that pops and has your brand stand out but if you end up with too much it is both nauseating and ugly.</p>
<p></p>
<p>Ahh Much better. Character is nice but flamboyance is very easily annoying</p>
<h4 id="purpose">Purpose</h4>
<p>Like I say, your app needs a purpose otherwise what’s the point?</p>
<p>
</p>
<p>As you can see the app act doesn’t revolutionise e-commerce but what it does do is act as a hub for everything involved with this company. You can click a button and google maps opens up with the locations for shops and restaurants already plugged in and ready to plan a route. You can call to book a table for a restaurant and there are galleries of menus and images to see what products and dishes are on offer (As a side note if you are making a ReactJS app in Expo then <a href="https://www.npmjs.com/package/react-native-image-view" target="_blank" rel="noopener noreffer">react-native-image-view</a> is a godsend, it is a bit fiddly to get working but it means you can keep using Expo without having to delve into Android files and java SDKs).</p>
<h4 id="foolproofness-and-expandability">Foolproofness and Expandability</h4>
<p>To make your app accessible you have to ensure it is something easy to navigate and intuitive to use. Since this is my first mobile app I felt it was more of a case of making sure it doesn’t look out of place compared to the modern selection of mobile apps that supermarkets and resteraunts have on offer. It uses clear icons and a navigation bar at the bottom which is the current style. I wanted the user to not be confused upon opening the app but feel comfortable in using it and having a smooth experience.</p>
<p>One of the brilliant things about React Native is the modules are not only easy to use but also offer a great deal of wiggle room to do what you want. For example, creating new screens is as easy as adding a function to that screens javascript add sticking a call to it in a main navigator script; this allows the room to expand quite quickly once you’ve got a baseline set giving scalability without what some projects have which is a feeling of trying to balance on one leg while trying to solve a rubik’s cube.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 3: The Setup</title>
    <link>https://www.lukebriggs.dev/making-a-mobile-app-chapter-3/</link>
    <pubDate>Mon, 10 Dec 2018 20:14:17 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/making-a-mobile-app-chapter-3/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/7/drawingboard.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“He attacked everything in life with a mix of extraordinary genius and naive &gt;incompetence, and it was often difficult to tell which was which.”</p>
<p>Douglas Adams</p>
</blockquote>
<p>Setting up your React/Expo app is fairly straightforward but does require using the command line and some basic knowledge. You can find further detail <a href="https://expo.io/learn" target="_blank" rel="noopener noreffer">here</a> but I’ll summarise it now.</p>
<p>Firstly you will need to download and install <a href="https://nodejs.org/en/" target="_blank" rel="noopener noreffer">Node.js</a> This is quite self explanatory as it has an actual wizard thus not requiring any command line interaction. Node is necessary for almost anything running local javascript. Next you’ll need to open the command line (found on windows by typing ‘cmd’ into the start menu) and run this command:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">npm install expo-cli --global
</code></pre></td></tr></table>
</div>
</div><p>You will then be asked to create an Expo account. Next you want no navigate to the directory where you want to store your app, this is done in windows by typing ‘cd’ followed by the directory. For example :</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">cd C:\Users\&lt;Your Username&gt;\Documents\app
</code></pre></td></tr></table>
</div>
</div><p>Then run the commands:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">expo init my-new-project
cd my-new-project
expo start
</code></pre></td></tr></table>
</div>
</div><p>‘expo start’ will be the command you run in the directory whenever you want to run your Expo app. I would also recommend starting with the ‘tabs’ template as it places some very useful files and means you don’t need to set up your own navigation bars. After you have ran the start command your browser will open up with a QR code. Scan the QR code in the Expo app (<a href="https://play.google.com/store/apps/details?id=host.exp.exponent&amp;hl=en_GB" target="_blank" rel="noopener noreffer">Google Play</a> and <a href="https://itunes.apple.com/us/app/expo-client/id982107779?mt=8" target="_blank" rel="noopener noreffer">iOS</a>) and behold your first expo app. If you have experience in ReactJS, you can dive into the files with your text editor of choice (I prefer <a href="https://code.visualstudio.com/" target="_blank" rel="noopener noreffer">VS Code</a>) and follow the instructions both in the app and consulting the <a href="https://docs.expo.io/versions/v31.0.0/workflow/up-and-running" target="_blank" rel="noopener noreffer">documentation</a>.  If you don’t have experience, I would recommend using the <a href="https://www.codecademy.com/learn" target="_blank" rel="noopener noreffer">Codeacademy</a> course on ReactJS and Javascript. Also remember Google is your best friend, if you don’t know something don’t be afraid to google it.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 2: A Bad Worker Blames His Tools</title>
    <link>https://www.lukebriggs.dev/making-a-mobile-app-chapter-2/</link>
    <pubDate>Sun, 09 Dec 2018 20:07:21 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/making-a-mobile-app-chapter-2/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/6/phone.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“Don’t Panic.”</p>
<p>Douglas Adams</p>
<p>Finding the right tool for the job might be the most important thing I’ve learned &gt;in my short time in the world of development. The classic conversation &gt;everyone who wants to get into development goes something like this:</p>
<p>New Guy: “What programming language is best.”</p>
<p>Pro: “There isn’t one.”</p>
<p>New Guy: “Ok. Well what programming language should I use for X.”</p>
<p>Pro: “It depends.”</p>
<p>New Guy: “Fine. Well what should I use if I want to use X for Y.”</p>
<p>Pro: “Whatever you are comfortable with.”</p>
<p>New Guy: “What do you mean comfortable. I’ve never programmed before,
anyway its not as if a language is some sort of sofa. Hey! Where are you going!
you can’t just leave me here!”</p>
<p>Google: “Hello.”</p>
<p>New Guy: “What.”</p>
<p>Google: “I’m your new best friend.”</p>
</blockquote>
<p>There are so many use cases and things you might want to develop that almost every instance of someone’s development is bespoke to what they want. This is something that you have to have experiences before you understand it which makes it more useful for a new developer to learn while doing rather than learning then doing.</p>
<p>I had to find the right tools for what I wanted. My requirements for this app were based off of the time constraints I had, the lack of experience I had and the needs I felt the app had:</p>
<ol>
<li>Needed to be easy to port to different platforms.</li>
<li>Had to be easy to integrate design and programming elements together.</li>
<li>Needed to be able to make a professional and modern look.
4.Didn’t require low level access</li>
</ol>
<p>I settled on <a href="https://facebook.github.io/react-native/" target="_blank" rel="noopener noreffer">React Native</a> with the <a href="https://expo.io/" target="_blank" rel="noopener noreffer">Expo toolchain</a>. I felt React was by far the best option I had. The only other options were using C# to make a Xamarin.Forms app which felt a bit like using a jackhammer to do teeth surgery or learning to use Java and Objective-C/Swift to do native development and use a completely different codebase, not only would I have to learn two languages and systems at once but also would need to fork out an initial cost of $99 for an apple developer account and develop on an Mac which I neither have nor want.</p>
<p>I’m using Expo because it means the app will be fully cross platform and I don’t need to interact with any of the awkward SDK’s and system specific stuff. Expo also provides a neat app that you run on your Android or iOS which connects to a local server with the app files and allows you to run your app within their app, no compiling, no apple developer account, no Mac. This made testing incredibly easy. Expo also handles keystoring for Android and all that fancy stuff.</p>
]]></description>
</item><item>
    <title>Making a Mobile App – Chapter 1: A Few False Starts</title>
    <link>https://www.lukebriggs.dev/making-a-mobile-app-chapter-1/</link>
    <pubDate>Sun, 09 Dec 2018 19:57:21 &#43;0000</pubDate>
    <author>Author</author>
    <guid>https://www.lukebriggs.dev/making-a-mobile-app-chapter-1/</guid>
    <description><![CDATA[<div class="featured-image">
                <img src="/static/postimages/5/phone.jpg" referrerpolicy="no-referrer">
            </div><blockquote>
<p>“I may not have gone where I intended to go, but I think I have ended up
where I needed to be.”</p>
<p>Douglas Adams</p>
</blockquote>
<p>Self-learning is often like trying to solve a maze, you follow the first path you see as far as you can. You reach a dead end. Then use what you learned in that path to give you an idea of where you could go next.</p>
<p>I’ve been trying to find a new small project for a while now. I lacked the enthusiasm to spend time making games as I generally find it is something you need to take a running jump at with a fresh idea and be able to maintain that flair through the tidal wave of texture drawing, physics calculations and gameplay design. At some point I will go back to game development but I wanted something new.</p>
<p>It was around this time that the opportunity came up to develop an app that may or may not be used for a local business. It had the vague deadline that let me experiment but gave me the pressure to finish it, it let me design something that was professional and would have to be used practically and it was something I’d never done before on a platform I had never developed for.</p>
]]></description>
</item></channel>
</rss>
